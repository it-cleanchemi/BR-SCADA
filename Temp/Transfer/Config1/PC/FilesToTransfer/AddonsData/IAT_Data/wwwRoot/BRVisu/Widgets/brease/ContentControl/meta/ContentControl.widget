<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.brease.ContentControl">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>unlicensed</LicenseInfo>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
				<File>brease/core/BaseWidget.js</File>
				<File>brease/datatype/ZoomType.js</File>
				<File>brease/events/BreaseEvent.js</File>
				<File>brease/core/libs/Deferred.js</File>
				<File>brease/core/Utils.js</File>
				<File>brease/decorators/DragAndDropCapability.js</File>
				<File>brease/controller/libs/ScrollManager.js</File>
				<File>widgets/brease/common/libs/HideableWidgetState.js</File>
				<File>widgets/brease/common/libs/HideableWidgetEvents.js</File>
				<File>widgets/brease/common/DragDropProperties/libs/DroppablePropertiesEvents.js</File>
			</Files>
			<Widgets>
				<Widget>widgets/brease/ContentControl/ContentControl.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">System</Category>
		</Categories>
		<Descriptions>
			<Description name="short">Widget to load a content</Description>
			<Description name="de">Das ContentControl-Widget ermöglicht das Laden eines Contents in einem Widget</Description>
			<Description name="en">The widget provides an optional configurable contentId property where the user can reference a content which is loaded when the widget is shown on the client</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.brease.ContentControl</Class>
			<Class level="1">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>widgets.brease.GroupBox</Parent>
			<Parent>widgets.brease.TabItem</Parent>
			<Parent>widgets.brease.FlexBoxItem</Parent>
			<Parent>widgets.brease.InfoBanner</Parent>
			<Parent>widgets.brease.FlyOut</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="Focus" read="false">
				<Description>Sets focus on the widget element, if it can be focused and keyboardOperation=true</Description>
			</Method>
			<Method name="GetContentId" read="true">
				<Description>Returns the contentId of the current loaded content.
Returns empty string, if no content is loaded.				</Description>
				<Result type="ContentReference"/>
			</Method>
			<Method name="LoadContent" read="false">
				<Description>Asynchronous method to load a content into the widget.</Description>
				<Result type="brease.core.libs.Deferred"/>
				<Arguments>
					<Argument name="contentId" type="ContentReference" index="0" required="true">
						<Description>id of content</Description>
					</Argument>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="UnloadContent" read="false">
				<Description>Asynchronous method to unload the current content of the widget.</Description>
				<Result type="brease.core.libs.Deferred"/>
			</Method>
		</Methods>
		<Events>
			<Event name="FocusIn">
				<Description>Fired when the widgets gets focus</Description>
			</Event>
			<Event name="FocusOut">
				<Description>Fired when the widgets lost focus</Description>
			</Event>
			<Event name="OnDragEnter">
				<Description>Fired when element has onDragEnter.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been entering the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been entering the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDragLeave">
				<Description>Fired when element has OnDragLeave.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been leaving the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been leaving the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="OnDrop">
				<Description>Fired when element has OnDrop.</Description>
				<Arguments>
					<Argument name="contentId" type="String" index="0" required="true">
						<Description>content id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
					<Argument name="widgetId" type="String" index="1" required="true">
						<Description>id of the widget that has been dropped on the droppable widget</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="VisibilityChanged" deprecated="true">
				<Description>Fired when visibility of widget changes.</Description>
				<Arguments>
					<Argument name="visibility" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="contentId" type="ContentReference" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="">
				<Description>reference to a content; this content is loaded immediately</Description>
			</Property>
			<Property name="deactivate" type="Boolean" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="false">
				<Description>defines, if the loaded content is deactivated, when the widget is not shown</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
			<Property name="zoomMode" type="ZoomType" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="original"/>
		</Properties>
		<StyleProperties>
			<StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.brease.ContentControl" category="Layout" groupRefId="Size" groupOrder="1" default="100%">
				<StyleElement attribute="@include elemWidth($value)"/>
				<Description>outer width of widget</Description>
			</StyleProperty>
			<StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.brease.ContentControl" category="Layout" groupRefId="Size" groupOrder="2" default="100%">
				<StyleElement attribute="@include elemHeight($value)"/>
				<Description>outer height of widget</Description>
			</StyleProperty>
			<StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
				<StyleElement attribute="@include elemTop($value)"/>
				<Description>absolute position measured from top boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
				<StyleElement attribute="@include elemLeft($value)"/>
				<Description>absolute position measured from left boundary of parent container</Description>
			</StyleProperty>
			<StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
				<StyleElement attribute="z-index"/>
				<Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;
        The zIndex must be unique within a content.&lt;br/&gt;				</Description>
			</StyleProperty>
		</StyleProperties>
		<PropertyGroups>
			<PropertyGroup name="Size" type="String" category="Layout">
				<Description>outer height and width of widget</Description>
			</PropertyGroup>
			<PropertyGroup name="Position" type="String" category="Layout">
				<Description>top and left of widget</Description>
			</PropertyGroup>
		</PropertyGroups>
	<BindingTemplates>
  
</BindingTemplates>
</Widget>
</WidgetLibrary>