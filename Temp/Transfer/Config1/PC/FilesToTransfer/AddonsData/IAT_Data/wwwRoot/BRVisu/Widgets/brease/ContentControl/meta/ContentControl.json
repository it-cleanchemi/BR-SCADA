{"name":"widgets.brease.ContentControl","type":"widget","meta":{"superClass":"brease.core.BaseWidget","requires":[],"mixins":["widgets.brease.common.DragDropProperties.libs.DroppablePropertiesEvents"],"parents":["widgets.brease.GroupBox","widgets.brease.TabItem","widgets.brease.FlexBoxItem","widgets.brease.InfoBanner","widgets.brease.FlyOut"],"children":[],"inheritance":["widgets.brease.ContentControl","brease.core.BaseWidget"],"filePath":"widgets/brease/ContentControl/ContentControl.js"},"methods":[{"name":"Focus","originalName":"focus","read":false,"description":"Sets focus on the widget element, if it can be focused and keyboardOperation=true\n","iatStudioExposed":true},{"name":"GetContentId","originalName":"getContentId","read":true,"description":"Returns the contentId of the current loaded content.\nReturns empty string, if no content is loaded.\n","iatStudioExposed":true,"result":{"name":"return","type":"ContentReference","description":"\n"}},{"name":"LoadContent","originalName":"loadContent","read":false,"description":"Asynchronous method to load a content into the widget.\n","iatStudioExposed":true,"parameter":[{"name":"contentId","type":"ContentReference","index":0,"description":"id of content\n","optional":false}],"result":{"name":"return","type":"brease.core.libs.Deferred","description":"If actions (=method with iatStudioExposed) use a deferred object as return value, ActionController expects the deferred object to be resolved in any case.\nReturn values in deferred.resolve(success, result) are:\n{Boolean} success: indicator if method was successful\n{Boolean} result: the actual return value of the method (in our case result == success)\n{Object} contentData: additional info about contents to be activated or deactivated\n{ContentReference[]} contentData.activate: contents to be activated\n{ContentReference[]} contentData.deactivate: contents to be deactivated\n"}},{"name":"setAdditionalStyle","originalName":"setAdditionalStyle","read":false,"description":"Add an additional style to the widget element. The initial style will not be removed.\nThe additional style will not be removed, when the style of the widget is changed.\nYou can remove the additional style via removeAdditionalStyle.\n","iatStudioExposed":false,"parameter":[{"name":"styleName","type":"StyleReference","index":0,"description":"\n","optional":false}]},{"name":"setEditable","originalName":"setEditable","read":false,"description":"Sets the state of property «editable»\nUsed for «editable» binding; method is called exclusevely by the framework\n","iatStudioExposed":false,"parameter":[{"name":"editable","type":"Boolean","index":0,"description":"\n","optional":false},{"name":"metaData","type":"Object","index":1,"description":"\n","optional":false}]},{"name":"setParentCoWiId","originalName":"setParentCoWiId","read":false,"description":"Used to inherit parentCoWiId inside of compound widgets to inner widgets which are not projected, e.g. inner widgets of Login widget\n","iatStudioExposed":false,"parameter":[{"name":"value","type":"String","index":0,"description":"\n","optional":false}]},{"name":"setTabIndex","originalName":"setTabIndex","read":false,"description":"Sets the state of property «tabIndex»\n","iatStudioExposed":false,"parameter":[{"name":"value","type":"Number","index":0,"description":"\n","optional":false}]},{"name":"SetVisible","originalName":"setVisible","read":false,"description":"Sets the state of property «visible»\n","iatStudioExposed":true,"parameter":[{"name":"value","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"UnloadContent","originalName":"unloadContent","read":false,"description":"Asynchronous method to unload the current content of the widget.\n","iatStudioExposed":true,"result":{"name":"return","type":"brease.core.libs.Deferred","description":"If actions (=method with iatStudioExposed) use a deferred object as return value, ActionController expects the deferred object to be resolved in any case.\nReturn values in deferred.resolve(success, result, contentData) are:\n{Boolean} success: indicator if method was successful\n{Boolean} result: the actual return value of the method (in our case result == success)\n{Object} contentData: additional info about contents to be activated or deactivated\n{ContentReference[]} contentData.activate: contents to be activated\n{ContentReference[]} contentData.deactivate: contents to be deactivated\n"}}],"events":[{"name":"FocusIn","description":"Fired when the widgets gets focus\n"},{"name":"FocusOut","description":"Fired when the widgets lost focus\n"},{"name":"OnDragEnter","description":"Fired when element has onDragEnter.\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"content id of the widget that has been entering the droppable widget\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"id of the widget that has been entering the droppable widget\n","optional":false}]},{"name":"OnDragLeave","description":"Fired when element has OnDragLeave.\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"content id of the widget that has been leaving the droppable widget\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"id of the widget that has been leaving the droppable widget\n","optional":false}]},{"name":"OnDrop","description":"Fired when element has OnDrop.\n","parameter":[{"name":"contentId","type":"String","index":0,"description":"content id of the widget that has been dropped on the droppable widget\n","optional":false},{"name":"widgetId","type":"String","index":1,"description":"id of the widget that has been dropped on the droppable widget\n","optional":false}]},{"name":"VisibilityChanged","description":"Fired when visibility of widget changes.\n","deprecated":true,"parameter":[{"name":"visibility","type":"Boolean","index":0,"description":"\n","optional":false}]},{"name":"VisibleChanged","description":"Fired when the visibility of the widget changes.\n","parameter":[{"name":"value","type":"Boolean","index":0,"description":"visibility\n\n\n\n","optional":false}]}],"properties":[{"name":"contentId","type":"ContentReference","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.ContentControl","projectable":true,"description":"reference to a content; this content is loaded immediately\n","category":"Behavior","defaultValue":""},{"name":"deactivate","type":"Boolean","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.ContentControl","projectable":true,"description":"defines, if the loaded content is deactivated, when the widget is not shown\n","category":"Behavior","defaultValue":"false"},{"name":"permissionView","type":"RoleCollection","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"restricts visibility to users, which have given roles\n","category":"Accessibility"},{"name":"visible","type":"Boolean","initOnly":false,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"brease.core.BaseWidget","projectable":true,"description":"change visibility\n","category":"Behavior","defaultValue":"true"},{"name":"zoomMode","type":"ZoomType","initOnly":true,"localizable":false,"editableBinding":false,"readOnly":false,"required":false,"owner":"widgets.brease.ContentControl","projectable":true,"description":"\n","category":"Behavior","defaultValue":"original"},{"name":"zIndex","type":"UInteger","description":"The zIndex property specifies the z-order of a widget and its childs.<br/>\r\n        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.<br/>\r\n        The zIndex must be unique within a content.<br/>","initOnly":true,"required":true,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"left","type":"Integer","description":"absolute position measured from left boundary of parent container","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"top","type":"Integer","description":"absolute position measured from top boundary of parent container","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"brease.core.BaseWidget","hide":false,"cssProp":true},{"name":"height","type":"Size","defaultValue":"100%","description":"outer height of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"widgets.brease.ContentControl","hide":false,"cssProp":true},{"name":"width","type":"Size","defaultValue":"100%","description":"outer width of widget","initOnly":true,"required":false,"readOnly":false,"projectable":true,"owner":"widgets.brease.ContentControl","hide":false,"cssProp":true}],"dependencies":{"files":["brease/core/BaseWidget.js","brease/datatype/ZoomType.js","brease/events/BreaseEvent.js","brease/core/libs/Deferred.js","brease/core/Utils.js","brease/decorators/DragAndDropCapability.js","brease/controller/libs/ScrollManager.js","widgets/brease/common/libs/HideableWidgetState.js","widgets/brease/common/libs/HideableWidgetEvents.js","widgets/brease/common/DragDropProperties/libs/DroppablePropertiesEvents.js"],"widgets":["widgets/brease/ContentControl/ContentControl.js"]},"categories":{"Category":["System"]},"descriptions":{"short":"Widget to load a content","de":"Das ContentControl-Widget ermöglicht das Laden eines Contents in einem Widget","en":"The widget provides an optional configurable contentId property where the user can reference a content which is loaded when the widget is shown on the client"},"superproperties":{"id":{"type":"WidgetId"},"enable":{"type":"Boolean"},"permissionOperate":{"type":"RoleCollection"},"permissionView":{"type":"RoleCollection"},"style":{"type":"StyleReference"},"tabIndex":{"type":"Integer"},"tooltip":{"type":"String"},"visible":{"type":"Boolean"},"zIndex":{"type":"UInteger"},"left":{"type":"Integer"},"top":{"type":"Integer"},"height":{"type":"AutoSize"},"width":{"type":"AutoSize"}},"styleproperties":{"StyleProperty":[{"$":{"name":"width","type":"Size","not_styleable":"true","owner":"widgets.brease.ContentControl","category":"Layout","groupRefId":"Size","groupOrder":"1","default":"100%"},"StyleElement":[{"$":{"attribute":"@include elemWidth($value)"}}],"Description":["outer width of widget"]},{"$":{"name":"height","type":"Size","not_styleable":"true","owner":"widgets.brease.ContentControl","category":"Layout","groupRefId":"Size","groupOrder":"2","default":"100%"},"StyleElement":[{"$":{"attribute":"@include elemHeight($value)"}}],"Description":["outer height of widget"]},{"$":{"name":"top","type":"Integer","not_styleable":"true","owner":"brease.core.BaseWidget","category":"Layout","groupRefId":"Position","groupOrder":"1"},"StyleElement":[{"$":{"attribute":"@include elemTop($value)"}}],"Description":["absolute position measured from top boundary of parent container"]},{"$":{"name":"left","type":"Integer","not_styleable":"true","owner":"brease.core.BaseWidget","category":"Layout","groupRefId":"Position","groupOrder":"2"},"StyleElement":[{"$":{"attribute":"@include elemLeft($value)"}}],"Description":["absolute position measured from left boundary of parent container"]},{"$":{"name":"zIndex","type":"UInteger","not_styleable":"true","owner":"brease.core.BaseWidget","category":"Layout","required":"true"},"StyleElement":[{"$":{"attribute":"z-index"}}],"Description":["The zIndex property specifies the z-order of a widget and its childs.<br/>\r\n        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.<br/>\r\n        The zIndex must be unique within a content.<br/>"]}],"$":{}},"propertygroups":{"PropertyGroup":[{"$":{"name":"Size","type":"String","category":"Layout"},"Description":["outer height and width of widget"]},{"$":{"name":"Position","type":"String","category":"Layout"},"Description":["top and left of widget"]}]}}