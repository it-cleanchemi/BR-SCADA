@import "mixins.scss";
@import "../../../../../types/Body_base";
.system_brease_Body_style_default {
@include system_brease_Body_base; 
	background-color: #111111;

}
@import "../../../../../types/Area_base";
.system_brease_Area_style_default {
@include system_brease_Area_base; 
	background-color: #111111;

}
@import "../../../../../types/StartupProgressBar_base";
.system_brease_StartupProgressBar_style_default {
@include system_brease_StartupProgressBar_base; 
	background-color: #111111;
.startupProgressBar {
	background-color: #CC0000;
}
.startupProgressBar {
	border-radius: 0px;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #000000;
}

}
@import "../../../../widgets/brease/Button/meta/Button_base";
.widgets_brease_Button_style_default {
@include widgets_brease_Button_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}

}
@import "../../../../widgets/brease/NavigationButton/meta/NavigationButton_base";
.widgets_brease_NavigationButton_style_default {
@include widgets_brease_NavigationButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #888888;
}
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #888888;
}
&.active:not(.disabled):not(.editMode) span {
	color: #FFFFFF;
}
&.active.checked:not(.disabled) span {
	color: #FFFFFF;
}
@include border-radius(0px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#888888 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#0096a9 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#0096a9 100%)');
}
&.checked:not(.disabled):not(.active) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#0096a9 100%)');
}
&.active svg {
	fill: #CC0000;
}
&.checked:not(.disabled):not(.active) svg {
	fill: #0096a9;
}
&.checked:not(.disabled):not(.active) span {
	color: #FFFFFF;
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.active:not(.disabled):not(.editMode) {
@include box-shadow(none);
}
&.checked {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}

}
@import "../../../../widgets/brease/ToggleButton/meta/ToggleButton_base";
.widgets_brease_ToggleButton_style_default {
@include widgets_brease_ToggleButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}

}
@import "../../../../widgets/brease/PushButton/meta/PushButton_base";
.widgets_brease_PushButton_style_default {
@include widgets_brease_PushButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled svg {
	fill: #989898;
}

}
@import "../../../../widgets/brease/Label/meta/Label_base";
.widgets_brease_Label_style_default {
@include widgets_brease_Label_base; 
	font-size: 16px;
& span {
	color: #FFFFFF;
}
	background-color: transparent;
	border-style: none;
&:before {
	border-style: none;
}
&:after {
	border-style: none;
}
span {
	padding: 5px;
}
@include box-shadow(none);
@include font-weight-bold(true);

}
@import "../../../../widgets/brease/DateTimeInput/meta/DateTimeInput_base";
.widgets_brease_DateTimeInput_style_default {
@include widgets_brease_DateTimeInput_base; 
&:not(.active):not(.disabled) span {
	color: #FFFFFF;
}
&:not(.disabled):not(.active) {
	border-width: 0px;
}
&:not(.active):not(.disabled) {
	border-color: #CC0000;
}
&.active:not(.disabled) {
	border-color: #CC0000;
}
	font-size: 16px;
&:not(.active):not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) span {
	color: #CC0000;
}
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment(right);

}
@import "../../../../widgets/brease/DateTimeOutput/meta/DateTimeOutput_base";
.widgets_brease_DateTimeOutput_style_default {
@include widgets_brease_DateTimeOutput_base; 
& span {
	color: #474747;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include text-alignment(left);

}
@import "../../../../widgets/brease/KeyBoard/meta/KeyBoard_base";
.widgets_brease_KeyBoard_style_default {
@include widgets_brease_KeyBoard_base; 
.keyBoardHeader {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}
.dropdown {
@include backGroundGradient('linear-gradient(to bottom, #555555 0%,#111111 100%)');
}
.keyBoardBody button:not(.active):not(.selected) {
@include backGroundGradient('linear-gradient(to bottom, #555555 0%,#111111 100%)');
}
	border-color: #333333;
header {
	background-color: #333333;
}
.keyBoardBody {
	background-color: #333333;
}
.dropdown .button.active {
	background-color: #CC0000;
}
.dropdown .button.selected {
	background-color: #CC0000;
}
.keyBoardBody button.active {
	background-color: #CC0000;
}
.keyBoardBody button.selected {
	background-color: #CC0000;
}
.keyBoardBody button.active .icon-delete {
	color: #CC0000;
}
.keyBoardBody button.selected .icon-delete {
	color: #CC0000;
}
.dropdown {
	color: #FFFFFF;
}
.keyBoardButtons button {
	color: #FFFFFF;
}
.keyBoardButtons button sub {
	color: #FFFFFF;
}
.keyBoardButtons button svg {
	fill: #FFFFFF;
}
.keyBoardBody button .icon-shift {
	background-color: #FFFFFF;
}
.keyBoardBody button .icon-shift:after {
	border-bottom-color: #FFFFFF;
}

}
@import "../../../../widgets/brease/NumPad/meta/NumPad_base";
.widgets_brease_NumPad_style_default {
@include widgets_brease_NumPad_base; 
.numpadHeader {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}
.breaseNumPadButtons button:not(.active) {
@include backGroundGradient('linear-gradient(to bottom, #555555 0%,#111111 100%)');
}
	border-color: #333333;
header {
	background-color: #333333;
}
&.arrowLeft .breaseWindowArrow {
	border-right-color: #333333;
}
&.arrowRight .breaseWindowArrow {
	border-left-color: #333333;
}
&.arrowTop .breaseWindowArrow {
	border-bottom-color: #333333;
}
&.arrowBottom .breaseWindowArrow {
	border-top-color: #333333;
}
.numpad {
	background-color: #333333;
}
.breaseNumPadButtons button.active {
	background-color: #CC0000;
}
.breaseNumPadButtons button {
	color: #FFFFFF;
}
.maxValueBox .maxValue {
	color: #FFFFFF;
}
.maxValueBox label {
	color: #FFFFFF;
}
.minValueBox .minValue {
	color: #FFFFFF;
}
.minValueBox label {
	color: #FFFFFF;
}
.breaseNumPadDeleteIcon {
@include svgcolordelete('#FFFFFF');
}
.breaseNumPadEnterIcon {
@include svgcolorenter('#FFFFFF');
}
.numpad .breaseNumpadNumericValueOutterWrapper .breaseNumpadNumericValueInnerWrapper .breaseNumpadNumericValue {
	color: #FFFFFF;
}
.breaseNumpadSlider .numpadSlider_thumb .numpadSlider_output span {
	color: #FFFFFF;
}
.breaseNumpadSlider .numpadSlider_thumb .numpadSlider_knob {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}

}
@import "../../../../widgets/brease/DateTimePicker/meta/DateTimePicker_base";
.widgets_brease_DateTimePicker_style_default {
@include widgets_brease_DateTimePicker_base; 
header {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}
	border-color: #333333;
header {
	background-color: #333333;
}
&.arrowLeft .breaseWindowArrow {
	border-right-color: #333333;
}
&.arrowRight .breaseWindowArrow {
	border-left-color: #333333;
}
&.arrowTop .breaseWindowArrow {
	border-bottom-color: #333333;
}
&.arrowBottom .breaseWindowArrow {
	border-top-color: #333333;
}
.dateTimePickerBody .dateTimePickerButtons {
	background-color: #333333;
}
.dateTimePickerBody button {
	background-color: #333333;
}
.dateTimePickerBody .dateTimePickerHeadings .actDate {
	background-color: #333333;
}
.dateTimePickerBody .dateTimePickerControl {
	background-color: #333333;
}
.dateTimePickerBody .dateTimePickerButtons button {
	border-bottom-color: #333333;
}
.dateTimePickerBody .dateTimePickerControl .dateTimePickerEnter.active {
	background-color: #333333;
}
.dateTimePickerBody .dateTimePickerControl .dateTimePickerReset.active {
	background-color: #333333;
}
.dateTimePickerBody .dateTimePickerButtons .marker {
	background-color: #CC0000;
}
.dateTimePickerBody button {
	color: #FFFFFF;
}
.dateTimePickerBody .dateTimePickerHeadings .actDate {
	color: #FFFFFF;
}

}
@import "../../../../widgets/brease/WebViewer/meta/WebViewer_base";
.widgets_brease_WebViewer_style_default {
@include widgets_brease_WebViewer_base; 
& iframe {
	border-style: none;
}
& div.editorImage {
	border-style: none;
}

}
@import "../../../../widgets/brease/GroupBox/meta/GroupBox_base";
.widgets_brease_GroupBox_style_default {
@include widgets_brease_GroupBox_base; 
> .header {
	background-color: #333333;
}
	background-color: #111111;
> .header span {
	font-size: 18px;
}
> .header {
height: 18px + 20px;
}
> .header span {
	color: #FFFFFF;
}
@include border-radius(0px 0px 0px 0px);
	border-width: 1px;
> .header {
	border-width: 1px;
}
	border-color: #333333;
> .header {
	border-color: #333333;
}
@include box-shadow(none);

}
@import "../../../../widgets/brease/NumericInput/meta/NumericInput_base";
.widgets_brease_NumericInput_style_default {
@include widgets_brease_NumericInput_base; 
&:not(.disabled):not(.active) input {
	color: #FFFFFF;
}
&:not(.disabled):not(.active) span.breaseNumericInput_unit {
	color: #FFFFFF;
}
&:not(.active):not(.disabled) {
	border-width: 2px 6px 2px 2px;
}
&.active:not(.disabled) {
	border-width: 2px 6px 2px 2px;
}
&:not(.disabled):not(.active) {
	border-color: #CC0000;
}
&.active:not(.disabled) {
	border-color: #CC0000;
}
input {
	font-size: 16px;
}
&:not(.disabled):not(.active) {
	background-color: #111111;
}
&.active:not(.disabled) {
	background-color: #CC0000;
}
&.active:not(.disabled) input {
	color: #FFFFFF;
}
&.active:not(.disabled) span.breaseNumericInput_unit {
	color: #FFFFFF;
}
&.disabled {
	background-color: #333333;
}
&.disabled input {
	color: #888888;
}
&.disabled span.breaseNumericInput_unit {
	color: #888888;
}
input {
@include font-weight-bold(true);
}
@include box-shadow(none);

}
@import "../../../../widgets/brease/NumericOutput/meta/NumericOutput_base";
.widgets_brease_NumericOutput_style_default {
@include widgets_brease_NumericOutput_base; 
input {
	color: #FFFFFF;
}
span.breaseNumericOutput_unit {
	color: #FFFFFF;
}
	border-width: 0px;
input {
	font-size: 16px;
}
	background-color: transparent;
@include box-shadow(none);
input {
@include font-weight-bold(true);
}

}
@import "../../../../widgets/brease/TextInput/meta/TextInput_base";
.widgets_brease_TextInput_style_default {
@include widgets_brease_TextInput_base; 
&:not(.disabled):not(.active) input {
	color: #FFFFFF;
}
&:not(.disabled):not(.active) {
	border-width: 2px 6px 2px 2px;
}
&.active:not(.disabled) {
	border-width: 2px 6px 2px 2px;
}
&:not(.disabled):not(.active) {
	border-color: #CC0000;
}
&:not(.disabled).active {
	border-color: #CC0000;
}
input {
	font-size: 16px;
}
&:not(.disabled):not(.active) {
	background-color: #111111;
}
&:not(.disabled).active {
	background-color: #CC0000;
}
&:not(.disabled).active input {
	color: #FFFFFF;
}
input {
@include font-weight-bold(true);
}
@include box-shadow(none);
input {
@include text-alignment(center);
}
@include border-radius(0px);

}
@import "../../../../widgets/brease/TextOutput/meta/TextOutput_base";
.widgets_brease_TextOutput_style_default {
@include widgets_brease_TextOutput_base; 
& span {
	color: #FFFFFF;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment-all('center');

}
@import "../../../../widgets/brease/Password/meta/Password_base";
.widgets_brease_Password_style_default {
@include widgets_brease_Password_base; 
&:not(.disabled):not(.active) input {
	color: #FFFFFF;
}
&:not(.active):not(.disabled) {
	border-width: 2px 6px 2px 2px;
}
&.active:not(.disabled) {
	border-width: 2px 6px 2px 2px;
}
&:not(.disabled):not(.active) {
	border-color: #CC0000;
}
&:not(.disabled).active {
	border-color: #CC0000;
}
input {
	font-size: 16px;
}
&:not(.disabled):not(.active) {
	background-color: #111111;
}
&:not(.disabled).active {
	background-color: #CC0000;
}
&:not(.disabled).active input {
	color: #FFFFFF;
}
input {
@include font-weight-bold(true);
}
@include box-shadow(none);

}
@import "../../../../widgets/brease/DropDownBox/meta/DropDownBox_base";
.widgets_brease_DropDownBox_style_default {
@include widgets_brease_DropDownBox_base; 
& .TextView {
	font-size: 16px;
}
& .TextView {
	font-size: 16px;
}
& .TextView {
@include font-weight-bold(true);
}
& .TextView {
@include font-weight-bold(true);
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ItemView.itemDisabled > .TextView {
	color: #111111;
}
& > .ItemView > .ImageView.ImageIndicator {
@include display(true, 'flex');
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #CC0000;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #FFFFFF;
}
& > .ItemView.itemDisabled > .ImageView.ImageIndicator svg {
	fill: #555555;
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ItemView.itemDisabled {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView:not(.itemSelected) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView.itemSelected {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
& > .ItemView.itemSelected:not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
&.DropDownBoxView {
@include border-radius(0px);
}
& > .ItemView {
@include border-radius(0px);
}
& > .ListView.Container {
@include border-radius(0px);
}
& > .ItemView:not(.itemSelected) {
	border-width: 0px 0px 0px 0px;
}
& > .ItemView.itemSelected {
	border-width: 0px 0px 0px 0px;
}
& > .ListView.Container {
	border-width: 0px;
}
& .TextView {
@include text-alignment(left);
}
& .TextView {
@include text-alignment(left);
}

}
@import "../../../../widgets/brease/LogoutButton/meta/LogoutButton_base";
.widgets_brease_LogoutButton_style_default {
@include widgets_brease_LogoutButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}

}
@import "../../../../widgets/brease/LoginButton/meta/LoginButton_base";
.widgets_brease_LoginButton_style_default {
@include widgets_brease_LoginButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#CC0000 100%)');
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}

}
@import "../../../../widgets/brease/LoginInfo/meta/LoginInfo_base";
.widgets_brease_LoginInfo_style_default {
@include widgets_brease_LoginInfo_base; 
& span {
	color: #FFFFFF;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include text-alignment-all('left');

}
@import "../../../../widgets/brease/Rectangle/meta/Rectangle_base";
.widgets_brease_Rectangle_style_default {
@include widgets_brease_Rectangle_base; 
	border-width: 2px;
@include border-radius(0px);
	background-color: transparent;
	border-color: #555555;
	opacity: 1;

}
@import "../../../../widgets/brease/Ellipse/meta/Ellipse_base";
.widgets_brease_Ellipse_style_default {
@include widgets_brease_Ellipse_base; 
	border-width: 2px;
	background-color: transparent;
	border-color: #555555;
	opacity: 1;

}
@import "../../../../widgets/brease/Line/meta/Line_base";
.widgets_brease_Line_style_default {
@include widgets_brease_Line_base; 
line {
	stroke: #CC0000;
}
line {
	stroke-width: 1px;
}
line {
	opacity: 1;
}

}
@import "../../../../widgets/brease/CheckBox/meta/CheckBox_base";
.widgets_brease_CheckBox_style_default {
@include widgets_brease_CheckBox_base; 
	border-style: none;
&.checked:not(.disabled) svg {
	fill: #CC0000;
}
&.active:not(.disabled):not(.editMode) .checkbox {
	border-color: #CC0000;
}
&:not(.disabled) span {
	color: #FFFFFF;
}
&.active:not(.disabled):not(.editMode) .checkbox {
	background-color: #FFFFFF;
}
&.checked:not(.disabled) .checkbox {
	background-color: #FFFFFF;
}
&:not(.disabled):not(.active) .checkbox {
	background-color: #FFFFFF;
}
&.checked:not(.disabled):not(.active) span {
	color: #CC0000;
}
&.active:not(.disabled):not(.editMode) span {
	color: #FFFFFF;
}
&.checked:not(.disabled) span {
	color: #FFFFFF;
}
&.disabled .checkbox {
	background-color: #888888;
}
&.disabled.checked .checkbox {
	background-color: #888888;
}
&.disabled.active .checkbox {
	background-color: #888888;
}
&.disabled span {
	color: #888888;
}
&.disabled.checked span {
	border-color: #888888;
}
&.disabled.active span {
	border-color: #888888;
}
&.disabled.checked:not(.active) span {
	color: #CC0000;
}
&:not(.disabled):not(.active):not(.checked) {
	background-color: transparent;
}
&.active:not(.disabled):not(.editMode) {
	background-color: transparent;
}
&.checked:not(.disabled) {
	background-color: transparent;
}
&.disabled {
	background-color: transparent;
}
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}

}
@import "../../../../widgets/brease/LanguageSelector/meta/LanguageSelector_base";
.widgets_brease_LanguageSelector_style_default {
@include widgets_brease_LanguageSelector_base; 
& .TextView {
	font-size: 16px;
}
& .TextView {
	font-size: 16px;
}
& .TextView {
@include font-weight-bold(true);
}
& .TextView {
@include font-weight-bold(true);
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ItemView.itemDisabled > .TextView {
	color: #111111;
}
& > .ItemView > .ImageView.ImageIndicator {
@include display(true, 'flex');
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #CC0000;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #FFFFFF;
}
& > .ItemView.itemDisabled > .ImageView.ImageIndicator svg {
	fill: #555555;
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ItemView.itemDisabled {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView:not(.itemSelected) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView.itemSelected {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
& > .ItemView.itemSelected:not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
&.DropDownBoxView {
@include border-radius(0px);
}
& > .ItemView {
@include border-radius(0px);
}
& > .ListView.Container {
@include border-radius(0px);
}
& > .ItemView:not(.itemSelected) {
	border-width: 0px 0px 0px 0px;
}
& > .ItemView.itemSelected {
	border-width: 0px 0px 0px 0px;
}
& > .ListView.Container {
	border-width: 0px;
}
& .TextView {
@include text-alignment(left);
}
& .TextView {
@include text-alignment(left);
}

}
@import "../../../../widgets/brease/MeasurementSystemSelector/meta/MeasurementSystemSelector_base";
.widgets_brease_MeasurementSystemSelector_style_default {
@include widgets_brease_MeasurementSystemSelector_base; 
& .TextView {
	font-size: 16px;
}
& .TextView {
	font-size: 16px;
}
& .TextView {
@include font-weight-bold(true);
}
& .TextView {
@include font-weight-bold(true);
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView:not(.textSelected) {
	color: #FFFFFF;
}
& > .ListView.Container > .ListView.List > .ItemView > .TextView.textSelected {
	color: #FFFFFF;
}
& > .ItemView.itemDisabled > .TextView {
	color: #111111;
}
& > .ItemView > .ImageView.ImageIndicator {
@include display(true, 'flex');
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #CC0000;
}
& > .ItemView.itemSelected:not(.itemDisabled) > .ImageView.ImageIndicator svg {
	fill: #FFFFFF;
}
& > .ItemView.itemDisabled > .ImageView.ImageIndicator svg {
	fill: #555555;
}
& > .ItemView:not(.itemSelected):not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ItemView.itemDisabled {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView:not(.itemSelected) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#555555 100%)');
}
& > .ListView.Container > .ListView.List > .ItemView.itemSelected {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
& > .ItemView.itemSelected:not(.itemDisabled) {
@include backGroundGradient('linear-gradient(to left,#111111 0%,#CC0000 100%)');
}
&.DropDownBoxView {
@include border-radius(0px);
}
& > .ItemView {
@include border-radius(0px);
}
& > .ListView.Container {
@include border-radius(0px);
}
& > .ItemView:not(.itemSelected) {
	border-width: 0px 0px 0px 0px;
}
& > .ItemView.itemSelected {
	border-width: 0px 0px 0px 0px;
}
& > .ListView.Container {
	border-width: 0px;
}
& .TextView {
@include text-alignment(left);
}
& .TextView {
@include text-alignment(left);
}

}
@import "../../../../widgets/brease/FlyOut/meta/FlyOut_base";
.widgets_brease_FlyOut_style_default {
@include widgets_brease_FlyOut_base; 
.breaseFlyOutWrapper > .flyoutButton svg {
	fill: #CC0000;
}
.breaseFlyOutWrapper > .container {
	background-color: transparent;
}
.breaseFlyOutWrapper > .container {
	border-style: none;
}
.breaseFlyOutWrapper > .container {
	border-width: 0px;
}
.breaseFlyOutWrapper > .flyoutButton {
	border-width: 0px;
}
.breaseFlyOutWrapper > .flyoutButton {
@include border-radius(0px);
}
:not(.disabled):not(.active):not(.checked).breaseFlyOutWrapper > .flyoutButton {
	background-color: transparent;
}
:not(.disabled):not(.active):not(.checked).breaseFlyOutWrapper > .flyoutButton {
@include backGroundGradient('none');
}

}
@import "../../../../widgets/brease/Table/meta/Table_base";
.widgets_brease_Table_style_default {
@include widgets_brease_Table_base; 
&:not(.disabled)> .container > .dataTables_wrapper > .dataTables_scrollHead > .tableHeader > .headerElement:not(.override):not(.disabled) > span {
	color: #111111;
}
&:not(.disabled) .tableHeader>.headerElement:not(.override):not(.disabled) {
	background-color: #888888;
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td.override:not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected.override:not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected.override:not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td:not(.override):not(.disabled):not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected:not(.override):not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected:not(.override):not(.activeInput):not(.disabled) {
	color: #FFFFFF;
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td.selected.override:not(.disabled):not(.activeInput) {
	background-color: #CC0000;
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td.selected:not(.override):not(.disabled):not(.activeInput) {
	background-color: #CC0000;
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected.override:not(.disabled):not(.activeInput) {
@include active-background-color(#CC0000);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected.override:not(.disabled):not(.activeInput) {
@include active-background-color(#CC0000);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.even td.selected:not(.override):not(.disabled):not(.activeInput) {
@include active-background-color(#CC0000);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.odd td.selected:not(.override):not(.disabled):not(.activeInput) {
@include active-background-color(#CC0000);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.odd:not(.disabled):not(.override) {
	background-color: #555555;
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.even:not(.disabled):not(.override) {
	background-color: #333333;
}
&:not(.disabled) .tableCells td:not(.selected):not(.override):not(.disabled):not([input=true]) {
	color: #FFFFFF;
}
.tableHeader div:not(.override) {
	font-size: 20px;
}
.tableCells tbody tr td:not(.override) {
	font-size: 16px;
}
.tableHeader div:not(.override) {
@include font-weight-bold(true);
}
.tableCells tbody tr td:not(.override) {
@include font-weight-bold(true);
}
@include box-shadow(none);
&.breaseTable .dataTables_scrollHead.verticalOrientation .tableHeader div:not(.override) {
	padding: 10px;
}
&.breaseTable .dataTables_scrollHead.horizontalOrientation .tableHeader div:not(.override) {
	padding: 10px;
}
&.breaseTable .horizontalOrientation .dataTables_scrollBody .tableCells tbody tr td:not(.override) {
	padding: 10px;
}
&.breaseTable .verticalOrientation .dataTables_scrollBody .tableCells tbody tr td:not(.override) {
	padding: 10px;
}
.tableCells tbody tr td:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollBody.horizontalOrientation .tableCells tbody tr:first-child td:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollBody.verticalOrientation .tableCells tbody tr td:first-child:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.tableHeader div:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollHead div {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollHead.verticalOrientation .tableHeader div:first-child:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollHead.verticalOrientation .tableHeader div:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollHead.horizontalOrientation .tableHeader div:first-child:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.dataTables_scrollHead.horizontalOrientation .tableHeader div:not(.override) {
	border-width: 1px 0px 0px 1px;
}
.tableCells tbody tr td:not(.override) {
	border-color: #111111;
}
.tableHeader div:not(.override) {
	border-color: #111111;
}
&:not(.disabled) .tableCells tbody tr td.disabled {
	border-color: #111111;
}
&.disabled .tableCells tbody tr td {
	border-color: #111111;
}
&.disabled .tableHeader div {
	border-color: #111111;
}
&.disabled .tableHeader>.headerElement.override > span {
@include importantTextColor(#111111);
}
&.disabled .tableHeader>.headerElement > span {
@include importantTextColor(#111111);
}
.tableHeader div:not(.override).disabled > span {
	color: #111111;
}
.tableHeader div.override.disabled > span {
	color: #111111;
}
&.disabled .tableHeader>.headerElement.override {
@include importantBackColor(#555555);
}
&.disabled .tableHeader>.headerElement {
@include importantBackColor(#555555);
}
.tableHeader>.headerElement:not(.override).disabled {
	background-color: #555555;
}
.tableHeader>.headerElement.override.disabled {
	background-color: #555555;
}
&.disabled .verticalOrientation .tableCells tbody tr.selected td.selected:not(.override):not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected:not(.override):not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected:not(.override):not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .verticalOrientation .tableCells tbody tr.selected td.selected.override:not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected.override:not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected.override:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td.selected:not(.override).disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected:not(.override).disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected:not(.override).disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.selected td.selected.override.disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected.override.disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected.override.disabled:not(.activeInput) {
@include importantTextColor(#888888);
}
&.disabled .verticalOrientation .tableCells tbody tr.even td.selected {
@include active-background-color(#AA0000);
}
&.disabled .verticalOrientation .tableCells tbody tr.odd  td.selected {
@include active-background-color(#AA0000);
}
&.verticalOrientation .tableCells tbody tr.even.selected.disabled {
@include active-background-color(#AA0000);
}
&.verticalOrientation .tableCells tbody tr.odd.selected.disabled {
@include active-background-color(#AA0000);
}
.verticalOrientation .tableCells tbody tr.even td.selected:not(.override).disabled {
@include active-background-color(#AA0000);
}
.verticalOrientation .tableCells tbody tr.odd td.selected:not(.override).disabled {
@include active-background-color(#AA0000);
}
.verticalOrientation .tableCells tbody tr.even td.selected.override.disabled {
@include active-background-color(#AA0000);
}
.verticalOrientation .tableCells tbody tr.odd td.selected.override.disabled {
@include active-background-color(#AA0000);
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected:not(.override) {
	background-color: #AA0000;
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected:not(.override) {
	background-color: #AA0000;
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(odd).selected.override {
	background-color: #AA0000;
}
&.disabled .horizontalOrientation .tableCells tbody tr td:nth-child(even).selected.override {
	background-color: #AA0000;
}
.horizontalOrientation .tableCells tbody tr.even td.selected:not(.override).disabled {
	background-color: #AA0000;
}
.horizontalOrientation .tableCells tbody tr.odd td.selected:not(.override).disabled {
	background-color: #AA0000;
}
.horizontalOrientation .tableCells tbody tr.even td.selected.override.disabled {
	background-color: #AA0000;
}
.horizontalOrientation .tableCells tbody tr.odd td.selected.override.disabled {
	background-color: #AA0000;
}
&.disabled .verticalOrientation .tableCells tbody tr.odd td:not(.override) {
	background-color: #333333;
}
&.disabled .verticalOrientation .tableCells tbody tr.odd {
	background-color: #333333;
}
.verticalOrientation .tableCells tbody tr.odd td:not(.override).disabled {
	background-color: #333333;
}
.verticalOrientation .tableCells tbody tr.odd.disabled.override {
	background-color: #333333;
}
&.disabled .verticalOrientation .tableCells tbody tr.even td:not(.override) {
	background-color: #111111;
}
&.disabled .verticalOrientation .tableCells tbody tr.even {
	background-color: #111111;
}
.verticalOrientation .tableCells tbody tr.even td:not(.override).disabled {
	background-color: #111111;
}
& .verticalOrientation .tableCells tbody tr.even.override.disabled {
	background-color: #111111;
}
&.disabled .tableCells td:not(.override) {
@include importantTextColor(#888888);
}
&.disabled .tableCells td.override {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.odd td:not(.override):not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.even td:not(.override):not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.odd td.override:not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .verticalOrientation .tableCells tbody tr.even td.override:not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.odd td:not(.override):not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.even td:not(.override):not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.odd td.override:not(.selected).disabled {
@include importantTextColor(#888888);
}
&:not(.disabled) .horizontalOrientation .tableCells tbody tr.even td.override:not(.selected).disabled {
@include importantTextColor(#888888);
}

}
@import "../../../../widgets/brease/ProgressBar/meta/ProgressBar_base";
.widgets_brease_ProgressBar_style_default {
@include widgets_brease_ProgressBar_base; 
.pb-outer-area {
	border-style: none;
}

}
@import "../../../../widgets/brease/FlexBox/meta/FlexBox_base";
.widgets_brease_FlexBox_style_default {
@include widgets_brease_FlexBox_base; 
	border-style: none;
> .header {
	border-bottom-style: none;
}

}
@import "../../../../widgets/brease/FlexBoxItem/meta/FlexBoxItem_base";
.widgets_brease_FlexBoxItem_style_default {
@include widgets_brease_FlexBoxItem_base; 
	margin: 0px;
> .header {
@include backGroundGradient('none');
}
	background-color: transparent;
> .header span {
	font-size: 40px;
}
> .header {
height: 40px + 20px;
}
> .header span {
	color: #FFFFFF;
}
@include border-radius(0px);
	border-width: 0px;
> .header {
	border-width: 0px;
}
	border-color: #111111;
> .header {
	border-color: #111111;
}
@include box-shadow(none);

}
@import "../../../../widgets/brease/AlarmList/meta/AlarmList_base";
.widgets_brease_AlarmList_style_default {
@include widgets_brease_AlarmList_base; 
&.breaseTableWidget .breaseTableColumnWidget:not(.disabled) {
	background-color: rgba(221,221,221,1);
}
@include box-shadow(4px 4px 14px 0px rgba(62, 79, 92, 0.75));

}
@import "../../../../../types/Page_base";
.system_brease_Page_style_default {
@include system_brease_Page_base; 

}
@import "../../../../../types/Dialog_base";
.system_brease_Dialog_style_default {
@include system_brease_Dialog_base; 
.breaseWindowClose {
@include display(false);
}
.breaseDialogWindowHeader {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}
.breaseDialogWindowHeader .textDiv {
	font-size: 20px;
}
.breaseDialogWindowHeader .textDiv {
	color: #FFFFFF;
}
@include border-radius(8px 8px 8px 8px);
.breaseDialogWindowContentBox {
@include border-bottom-right-radius(8px 8px 8px 8px);
}
.breaseDialogWindowContentBox {
@include border-bottom-left-radius(8px 8px 8px 8px);
}
.breaseDialogWindowHeader {
@include border-radius(8px 8px 8px 8px);
}
.breaseDialogWindowContentBox {
	border-width: 0px;
}
.breaseDialogWindowContentBox {
	border-color: #000000;
}
@include box-shadow(none);

}
@import "../../../../../types/MessageBox_base";
.system_brease_MessageBox_style_default {
@include system_brease_MessageBox_base; 
.breaseMessageBoxHeader {
@include backGroundGradient('linear-gradient(to bottom, #CC0000 0%,#111111 100%)');
}
.breaseMessageBoxContentBox div.content {
	font-size: 20px;
}
.breaseMessageBoxContentBox div.content {
	color: rgba(32, 54, 95, 1);
}
.breaseMessageBoxContentBox div.content {
@include font-weight-bold(true);
}
.messageBoxButton span {
	font-size: 18px;
}
.messageBoxButton {
@include border-radius(8px 8px 8px 8px);
}
.breaseMessageBoxHeader {
	border-radius: 8px 8px 8px 8px;
}
.messageBoxFooter {
	border-radius: 8px 8px 8px 8px;
}
.breaseMessageBoxContentBox {
	border-width: 1px;
}
.breaseMessageBoxContentBox {
	background-color: #ECBA44;
}
.breaseMessageBoxContentBox {
	border-color: #A899A0 #5F5F5F #5F5F5F #A899A0;
}
@include box-shadow(5px 5px 20px 0px rgba(62, 79, 92, 0.75));

}
@import "../../../../../types/Scrollbar_base";
.system_brease_Scrollbar_style_default {
@include system_brease_Scrollbar_base; 
.iScrollIndicator {
	background-color: rgba(77,77,77,0.5);
}
.dataTables_scrollBody::-webkit-scrollbar-thumb {
	background: rgba(77,77,77,0.5);
}
.iScrollIndicator {
	border-color: rgba(214,214,214,0.9);
}
.dataTables_scrollBody::-webkit-scrollbar-thumb {
	border-color: rgba(214,214,214,0.9);
}

}
@import "../../../../../types/Tooltip_base";
.system_brease_Tooltip_style_default {
@include system_brease_Tooltip_base; 
.tooltip-arrow {
@include display(true);
}
.breaseTooltip .breaseTooltipText {
	font-size: 14px;
}
.breaseTooltip {
@include box-shadow(5px 5px 20px 0px rgba(62, 79, 92, 0.75));
}
.breaseTooltip {
	border-color: #A899A0 #5F5F5F #5F5F5F #A899A0;
}
.tooltip-arrow .tooltip-arrow-border {
	border-top-color: #A899A0 #5F5F5F #5F5F5F #A899A0;
}

}
@import "../../../../../types/Area_base";
.system_brease_Area_style_header {
@include system_brease_Area_base; 
@include backGroundGradient('linear-gradient(to right,#111111,#555555)');

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Light {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #FFFFFF;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Dark_Neutral {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #333333;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Neutral {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #555555;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Light_Neutral {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #888888;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Background {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #111111;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Primary {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #CC0000;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Highlight {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #FEFEFE;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Warning {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #00FFFF;
}

}
@import "../../../../widgets/brease/Image/meta/Image_base";
.widgets_brease_Image_style_default_Error {
@include widgets_brease_Image_base; 
& > .ImageView > svg {
	fill: #FFFF00;
}

}
@import "../../../../widgets/brease/NavigationButton/meta/NavigationButton_base";
.widgets_brease_NavigationButton_style_default_error {
@include widgets_brease_NavigationButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #555555;
}
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #CC0000;
}
&.active:not(.disabled):not(.editMode) span {
	color: #FFFFFF;
}
&.active.checked:not(.disabled) span {
	color: #FFFFFF;
}
@include border-radius(0px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#555555 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#FFFFFF 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#FFFFFF 100%)');
}
&.checked:not(.disabled):not(.active) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#FFFFFF 100%)');
}
&.active svg {
	fill: #CC0000;
}
&.checked:not(.disabled):not(.active) svg {
	fill: #CC0000;
}
&.checked:not(.disabled):not(.active) span {
	color: #FFFFFF;
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.active:not(.disabled):not(.editMode) {
@include box-shadow(none);
}
&.checked {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}

}
@import "../../../../widgets/brease/ToggleButton/meta/ToggleButton_base";
.widgets_brease_ToggleButton_style_default_ButtonBar {
@include widgets_brease_ToggleButton_base; 
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #555555;
}
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #555555;
}
span {
	font-size: 20px;
}
@include border-radius(0px 0px 0px 0px);
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to bottom,#111111 70%,#555555 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to bottom,#111111 70%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to bottom,#111111 70%,#CC0000 100%)');
}
&.checked:not(.disabled):not(.active) {
@include backGroundGradient('linear-gradient(to bottom,#111111 70%,#CC0000 100%)');
}
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled):not(.active) span {
	color: #FFFFFF;
}
&.checked:not(.disabled):not(.active) svg {
	fill: #FFFFFF;
}
&.active:not(.disabled):not(.editMode) span {
	color: #FFFFFF;
}
&.active.checked:not(.disabled) span {
	color: #FFFFFF;
}
&.active svg {
	fill: #FFFFFF;
}

}
@import "../../../../widgets/brease/ToggleButton/meta/ToggleButton_base";
.widgets_brease_ToggleButton_style_default_Flyout {
@include widgets_brease_ToggleButton_base; 
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #111111;
}
&.active svg {
	fill: #CC0000;
}
&.checked:not(.disabled):not(.active) svg {
	fill: #CC0000;
}
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #111111;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(0px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('none');
}
&.active:not(.disabled) {
@include backGroundGradient('none');
}
&.checked:not(.disabled) {
@include backGroundGradient('none');
}
&.disabled {
@include backGroundGradient('none');
}
&.disabled.active {
@include backGroundGradient('none');
}
&.disabled.checked {
@include backGroundGradient('none');
}

}
@import "../../../../widgets/brease/PushButton/meta/PushButton_base";
.widgets_brease_PushButton_style_default_Play {
@include widgets_brease_PushButton_base; 
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #00FF00;
}
&.active svg {
	fill: #111111;
}
	border-style: outset;
&.active {
	border-style: outset;
}
&.checked {
	border-style: outset;
}
&.disabled {
	border-style: outset;
}
&:not(.active):not(.checked) {
	border-width: 2px;
}
&.disabled {
	border-width: 2px;
}
&:not(.disabled):not(.active):not(.checked) {
	background-color: #111111;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('none');
}
&.active:not(.disabled) {
@include backGroundGradient('none');
}
&.checked:not(.disabled) {
@include backGroundGradient('none');
}
&:not(.disabled):not(.active):not(.checked) {
	border-color: #888888;
}
&.active:not(.disabled):not(.editMode) {
	border-color: #111111;
}
&.checked:not(.disabled) {
	border-color: #111111;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 2px;
}
&.checked:not(.disabled) {
	border-width: 2px;
}
&.active:not(.disabled):not(.editMode) {
	background-color: #00FF00;
}
&.checked:not(.disabled) {
	background-color: #00FF00;
}
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #00FF00;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled svg {
	fill: #989898;
}

}
@import "../../../../widgets/brease/PushButton/meta/PushButton_base";
.widgets_brease_PushButton_style_default_Pause {
@include widgets_brease_PushButton_base; 
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #FFFF00;
}
&.active svg {
	fill: #111111;
}
	border-style: outset;
&.active {
	border-style: outset;
}
&.checked {
	border-style: outset;
}
&.disabled {
	border-style: outset;
}
&:not(.active):not(.checked) {
	border-width: 2px;
}
&.disabled {
	border-width: 2px;
}
&:not(.disabled):not(.active):not(.checked) {
	background-color: #111111;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('none');
}
&.active:not(.disabled) {
@include backGroundGradient('none');
}
&.checked:not(.disabled) {
@include backGroundGradient('none');
}
&:not(.disabled):not(.active):not(.checked) {
	border-color: #888888;
}
&.active:not(.disabled):not(.editMode) {
	border-color: #111111;
}
&.checked:not(.disabled) {
	border-color: #111111;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 2px;
}
&.checked:not(.disabled) {
	border-width: 2px;
}
&.active:not(.disabled):not(.editMode) {
	background-color: #FFFF00;
}
&.checked:not(.disabled) {
	background-color: #FFFF00;
}
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #FFFF00;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled svg {
	fill: #989898;
}

}
@import "../../../../widgets/brease/PushButton/meta/PushButton_base";
.widgets_brease_PushButton_style_default_Stop {
@include widgets_brease_PushButton_base; 
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #FF0000;
}
&.active svg {
	fill: #111111;
}
	border-style: outset;
&.active {
	border-style: outset;
}
&.checked {
	border-style: outset;
}
&.disabled {
	border-style: outset;
}
&:not(.active):not(.checked) {
	border-width: 2px;
}
&.disabled {
	border-width: 2px;
}
&:not(.disabled):not(.active):not(.checked) {
	background-color: #111111;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('none');
}
&.active:not(.disabled) {
@include backGroundGradient('none');
}
&.checked:not(.disabled) {
@include backGroundGradient('none');
}
&:not(.disabled):not(.active):not(.checked) {
	border-color: #888888;
}
&.active:not(.disabled):not(.editMode) {
	border-color: #111111;
}
&.checked:not(.disabled) {
	border-color: #111111;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 2px;
}
&.checked:not(.disabled) {
	border-width: 2px;
}
&.active:not(.disabled):not(.editMode) {
	background-color: #FF0000;
}
&.checked:not(.disabled) {
	background-color: #FF0000;
}
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #FF0000;
}
&.active:not(.disabled):not(.editMode) span {
	color: #111111;
}
&.active.checked:not(.disabled) span {
	color: #111111;
}
@include border-radius(15px);
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled svg {
	fill: #989898;
}

}
@import "../../../../widgets/brease/PushButton/meta/PushButton_base";
.widgets_brease_PushButton_style_default_Navigation {
@include widgets_brease_PushButton_base; 
span {
	font-size: 16px;
}
span {
@include font-weight-bold(true);
}
&:not(.disabled):not(.active):not(.checked) span {
	color: #888888;
}
&:not(.active):not(.disabled):not(.checked) svg {
	fill: #888888;
}
&.active:not(.disabled):not(.editMode) span {
	color: #FFFFFF;
}
&.active.checked:not(.disabled) span {
	color: #FFFFFF;
}
@include border-radius(0px);
&:not(.active):not(.checked) {
	border-width: 0px 0px 0px 0px;
}
&.disabled {
	border-width: 0px 0px 0px 0px;
}
&.active:not(.disabled):not(.editMode) {
	border-width: 0px 0px 0px 0px;
}
&.checked:not(.disabled) {
	border-width: 0px 0px 0px 0px;
}
&:not(.disabled):not(.active):not(.checked) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#888888 100%)');
}
&.active:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#CC0000 100%)');
}
&.checked:not(.disabled) {
@include backGroundGradient('linear-gradient(to right,#111111 90%,#CC0000 100%)');
}
&.active svg {
	fill: #CC0000;
}
&.disabled {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.active {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&.disabled.checked {
@include backGroundGradient('linear-gradient(to bottom, #e2e2e2 0%,#dbdbdb 50%,#d1d1d1 51%,#FFFFFF 100%)');
}
&:not(.active):not(.checked) {
@include box-shadow(none);
}
&.disabled.active {
@include box-shadow(none);
}
&.disabled.checked {
@include box-shadow(none);
}
&.active:not(.disabled):not(.editMode) {
@include box-shadow(none);
}
&.checked:not(.disabled) {
@include box-shadow(none);
}

}
@import "../../../../widgets/brease/Label/meta/Label_base";
.widgets_brease_Label_style_default_primary {
@include widgets_brease_Label_base; 
	font-size: 16px;
& span {
	color: #CC0000;
}
	background-color: transparent;
	border-style: none;
&:before {
	border-style: none;
}
&:after {
	border-style: none;
}
span {
	padding: 5px;
}
@include box-shadow(none);
@include font-weight-bold(true);

}
@import "../../../../widgets/brease/Label/meta/Label_base";
.widgets_brease_Label_style_default_highlight {
@include widgets_brease_Label_base; 
	font-size: 16px;
& span {
	color: #FEFEFE;
}
	background-color: transparent;
	border-style: none;
&:before {
	border-style: none;
}
&:after {
	border-style: none;
}
span {
	padding: 5px;
}
@include box-shadow(none);
@include font-weight-bold(true);

}
@import "../../../../widgets/brease/Label/meta/Label_base";
.widgets_brease_Label_style_default_neutral {
@include widgets_brease_Label_base; 
	font-size: 16px;
& span {
	color: #555555;
}
	background-color: transparent;
	border-style: none;
&:before {
	border-style: none;
}
&:after {
	border-style: none;
}
span {
	padding: 5px;
}
@include box-shadow(none);
@include font-weight-bold(true);

}
@import "../../../../widgets/brease/Label/meta/Label_base";
.widgets_brease_Label_style_default_background {
@include widgets_brease_Label_base; 
	font-size: 16px;
& span {
	color: #111111;
}
	background-color: transparent;
	border-style: none;
&:before {
	border-style: none;
}
&:after {
	border-style: none;
}
span {
	padding: 5px;
}
@include box-shadow(none);
@include font-weight-bold(true);

}
@import "../../../../widgets/brease/DateTimeInput/meta/DateTimeInput_base";
.widgets_brease_DateTimeInput_style_default_lightNeutral {
@include widgets_brease_DateTimeInput_base; 
&:not(.active):not(.disabled) span {
	color: #888888;
}
&:not(.disabled):not(.active) {
	border-width: 0px;
}
&:not(.active):not(.disabled) {
	border-color: #CC0000;
}
&.active:not(.disabled) {
	border-color: #CC0000;
}
	font-size: 16px;
&:not(.active):not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) span {
	color: #CC0000;
}
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment(right);

}
@import "../../../../widgets/brease/DateTimeInput/meta/DateTimeInput_base";
.widgets_brease_DateTimeInput_style_default_invisible {
@include widgets_brease_DateTimeInput_base; 
&:not(.active):not(.disabled) span {
	color: transparent;
}
&:not(.disabled):not(.active) {
	border-width: 0px;
}
&:not(.active):not(.disabled) {
	border-color: transparent;
}
&.active:not(.disabled) {
	border-color: transparent;
}
	font-size: 16px;
&:not(.active):not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) {
	background-color: transparent;
}
&.active:not(.disabled) span {
	color: transparent;
}
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment(right);

}
@import "../../../../widgets/brease/DateTimeOutput/meta/DateTimeOutput_base";
.widgets_brease_DateTimeOutput_style_default_lightNeutral {
@include widgets_brease_DateTimeOutput_base; 
& span {
	color: #888888;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include text-alignment(left);

}
@import "../../../../widgets/brease/GroupBox/meta/GroupBox_base";
.widgets_brease_GroupBox_style_default_Blank {
@include widgets_brease_GroupBox_base; 
> .header {
	background-color: rgba(255,255,255,0);
}
	background-color: rgba(255,255,255,0);
> .header span {
	font-size: 0px;
}
> .header {
height: 0px + 20px;
}
> .header span {
	color: rgba(255,255,255,0);
}
@include border-radius(0px 0px 0px 0px);
	border-width: 0px;
> .header {
	border-width: 0px;
}
	border-color: rgba(255,255,255,0);
> .header {
	border-color: rgba(255,255,255,0);
}
@include box-shadow(none);

}
@import "../../../../widgets/brease/NumericOutput/meta/NumericOutput_base";
.widgets_brease_NumericOutput_style_default_primary {
@include widgets_brease_NumericOutput_base; 
input {
	color: #CC0000;
}
span.breaseNumericOutput_unit {
	color: #CC0000;
}
	border-width: 0px;
input {
	font-size: 16px;
}
	background-color: transparent;
@include box-shadow(none);
input {
@include font-weight-bold(true);
}

}
@import "../../../../widgets/brease/NumericOutput/meta/NumericOutput_base";
.widgets_brease_NumericOutput_style_default_light_neutral {
@include widgets_brease_NumericOutput_base; 
input {
	color: #888888;
}
span.breaseNumericOutput_unit {
	color: #888888;
}
	border-width: 0px;
input {
	font-size: 16px;
}
	background-color: transparent;
@include box-shadow(none);
input {
@include font-weight-bold(true);
}

}
@import "../../../../widgets/brease/TextOutput/meta/TextOutput_base";
.widgets_brease_TextOutput_style_default_primary {
@include widgets_brease_TextOutput_base; 
& span {
	color: #CC0000;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment-all('center');

}
@import "../../../../widgets/brease/TextOutput/meta/TextOutput_base";
.widgets_brease_TextOutput_style_default_neutral {
@include widgets_brease_TextOutput_base; 
& span {
	color: #555555;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment-all('center');

}
@import "../../../../widgets/brease/TextOutput/meta/TextOutput_base";
.widgets_brease_TextOutput_style_default_darkNeutral {
@include widgets_brease_TextOutput_base; 
& span {
	color: #333333;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment-all('center');

}
@import "../../../../widgets/brease/TextOutput/meta/TextOutput_base";
.widgets_brease_TextOutput_style_default_lightNeutral {
@include widgets_brease_TextOutput_base; 
& span {
	color: #888888;
}
	border-width: 0px;
	font-size: 16px;
	background-color: transparent;
@include font-weight-bold(true);
@include box-shadow(none);
@include text-alignment-all('center');

}
@import "../../../../widgets/brease/Ellipse/meta/Ellipse_base";
.widgets_brease_Ellipse_style_On {
@include widgets_brease_Ellipse_base; 
	border-width: 2px;
	background-color: #00FF00;
	border-color: #00CC00;
	opacity: 1;

}
@import "../../../../widgets/brease/Ellipse/meta/Ellipse_base";
.widgets_brease_Ellipse_style_Off {
@include widgets_brease_Ellipse_base; 
	border-width: 2px;
	background-color: transparent;
	border-color: #555555;
	opacity: 1;

}
@import "../../../../widgets/brease/FlyOut/meta/FlyOut_base";
.widgets_brease_FlyOut_style_default_Alarms {
@include widgets_brease_FlyOut_base; 
.breaseFlyOutWrapper > .flyoutButton span {
	font-size: 16px;
}
.breaseFlyOutWrapper > .flyoutButton svg {
	fill: #CC0000;
}
.breaseFlyOutWrapper > .container {
	border-style: none;
}
.breaseFlyOutWrapper > .container {
	border-width: 0px;
}
.breaseFlyOutWrapper > .flyoutButton {
	border-width: 0px;
}
:not(.disabled):not(.active):not(.checked).breaseFlyOutWrapper > .flyoutButton {
	background-color: transparent;
}
.breaseFlyOutWrapper > .flyoutButton {
@include border-radius(15px);
}
:not(.disabled):not(.active):not(.checked).breaseFlyOutWrapper > .flyoutButton {
@include backGroundGradient('linear-gradient(to right,#555555 0%,#FFFFFF 100%)');
}
.breaseFlyOutWrapper > .container {
	background-color: rgba(17, 17, 17, 1);
}

}
