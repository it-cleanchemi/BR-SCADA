<?xml version="1.0" encoding="UTF-8"?>
<WidgetLibrary xmlns="http://www.br-automation.com/iat2014/widget">
	<Widget name="widgets.HA_BR_Template_WL.HA_IO_Analog">
		<ASEngineeringInfo>
			<IsProjectable>true</IsProjectable>
			<LicenseInfo>undefined</LicenseInfo>
			<IsCompound>true</IsCompound>
		</ASEngineeringInfo>
		<Dependencies>
			<Files>
			</Files>
			<Widgets>
				<Widget>widgets/HA_BR_Template_WL/HA_IO_Analog/HA_IO_Analog.js</Widget>
				<Widget>widgets/brease/CheckBox/CheckBox.js</Widget>
				<Widget>widgets/brease/Label/Label.js</Widget>
				<Widget>widgets/brease/NumericInput/NumericInput.js</Widget>
				<Widget>widgets/brease/NumericOutput/NumericOutput.js</Widget>
			</Widgets>
		</Dependencies>
		<Categories>
			<Category name="Category">Compound</Category>
		</Categories>
		<Descriptions>
			<Description name="short">CompoundWidget</Description>
			<Description name="de">CompoundWidget</Description>
			<Description name="en">CompoundWidget</Description>
		</Descriptions>
		<Inheritance>
			<Class level="0">widgets.HA_BR_Template_WL.HA_IO_Analog</Class>
			<Class level="1">system.widgets.CompoundWidget</Class>
			<Class level="2">brease.core.BaseWidget</Class>
		</Inheritance>
		<Parents>
			<Parent>*</Parent>
		</Parents>
		<Children>
		</Children>
		<Methods>
			<Method name="Focus" read="false">
				<Description>Sets focus on the widget element, if it can be focused and keyboardOperation=true</Description>
			</Method>
			<Method name="SetEnable" read="false">
				<Description>Sets the state of property «enable»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="SetVisible" read="false">
				<Description>Sets the state of property «visible»</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true"/>
				</Arguments>
			</Method>
			<Method name="ShowTooltip" read="false"/>
		</Methods>
		<Events>
			<Event name="Click">
				<Description>Fired when element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="1" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="2" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="DisabledClick">
				<Description>Fired when disabled element is clicked on.</Description>
				<Arguments>
					<Argument name="origin" type="String" index="0" required="true">
						<Description>id of widget that triggered this event</Description>
					</Argument>
					<Argument name="hasPermission" type="Boolean" index="1" required="true">
						<Description>defines if the state is caused due to missing roles of the current user</Description>
					</Argument>
					<Argument name="horizontalPos" type="String" index="2" required="true">
						<Description>horizontal position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
					<Argument name="verticalPos" type="String" index="3" required="true">
						<Description>vertical position of click in pixel i.e &apos;10px&apos;</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="EnableChanged">
				<Description>Fired when operability of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>operability</Description>
					</Argument>
				</Arguments>
			</Event>
			<Event name="FocusIn">
				<Description>Fired when the widgets gets focus</Description>
			</Event>
			<Event name="FocusOut">
				<Description>Fired when the widgets lost focus</Description>
			</Event>
			<Event name="OnWidgetsReady">
				<Description>Fired when compound and child widgets are ready</Description>
			</Event>
			<Event name="VisibleChanged">
				<Description>Fired when the visibility of the widget changes.</Description>
				<Arguments>
					<Argument name="value" type="Boolean" index="0" required="true">
						<Description>visibility</Description>
					</Argument>
				</Arguments>
			</Event>
		</Events>
		<Properties>
			<Property name="enable" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>Initial option to enable widget.</Description>
			</Property>
			<Property name="permissionOperate" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts operability to users, which have given roles</Description>
			</Property>
			<Property name="permissionView" type="RoleCollection" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Accessibility">
				<Description>restricts visibility to users, which have given roles</Description>
			</Property>
			<Property name="tabIndex" type="Integer" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="0"/>
			<Property name="tooltip" type="String" initOnly="true" localizable="true" editableBinding="false" readOnly="false" required="false" projectable="true" category="Appearance" defaultValue="">
				<Description>reference to a tooltip for a widget</Description>
			</Property>
			<Property name="visible" type="Boolean" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="true">
				<Description>change visibility</Description>
			</Property>
			<Property name="IO_Label" type="String" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="$IAT/">
				<Description>IO Label</Description>
				<Mappings>
					<Mapping widget="IO_Label" property="text"/>
				</Mappings>
			</Property>
			<Property name="minValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="-100">
				<Description>minValue</Description>
				<Mappings>
					<Mapping widget="IO_NumericInputForce" property="minValue"/>
				</Mappings>
			</Property>
			<Property name="maxValue" type="Number" initOnly="true" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="100">
				<Description>maxValue</Description>
				<Mappings>
					<Mapping widget="IO_NumericInputForce" property="maxValue"/>
				</Mappings>
			</Property>
			<Property name="unit" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="{}">
				<Description>Units</Description>
				<Mappings>
					<Mapping widget="IO_NumericInputForce" property="unit" mode="twoWay"/>
					<Mapping widget="IO_NumericOutputIO" property="unit" mode="twoWay"/>
					<Mapping widget="IO_NumericOutputApp" property="unit" mode="twoWay"/>
				</Mappings>
			</Property>
			<Property name="format" type="String" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="true" category="Behavior" defaultValue="{}">
				<Description>Format</Description>
				<Mappings>
					<Mapping widget="IO_NumericInputForce" property="format" mode="twoWay"/>
					<Mapping widget="IO_NumericOutputIO" property="format" mode="twoWay"/>
					<Mapping widget="IO_NumericOutputApp" property="format" mode="twoWay"/>
				</Mappings>
			</Property>
			<Property name="HA_IO_Analog_Forcing_typ" type="HA_IO_Analog_Forcing_typ" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="false" category="Behavior" isStruct="true" hide="true">
				<Description>Analog Forcing</Description>
				<Mappings>
					<Mapping widget="IO_CheckBoxForceOff" type="Boolean" property="value" mode="twoWay" memberPath="Off" mapToNode="false" samplingRate="fast"/>
					<Mapping widget="IO_CheckBoxForceOn" type="Boolean" property="value" mode="twoWay" memberPath="On" mapToNode="false" samplingRate="fast"/>
					<Mapping widget="IO_NumericInputForce" type="Number" property="node" mode="twoWay" memberPath="Value" mapToNode="true" samplingRate="fast"/>
				</Mappings>
			</Property>
			<Property name="HA_IO_Analog_Signal_typ" type="HA_IO_Analog_Signal_typ" initOnly="false" localizable="false" editableBinding="false" readOnly="false" required="false" projectable="false" category="Behavior" isStruct="true" hide="true">
				<Description>Analog Signal</Description>
				<Mappings>
					<Mapping widget="IO_NumericOutputIO" type="Number" property="node" mode="twoWay" memberPath="Vis.IO" mapToNode="true" samplingRate="fast"/>
					<Mapping widget="IO_NumericOutputApp" type="Number" property="node" mode="twoWay" memberPath="Vis.App" mapToNode="true" samplingRate="fast"/>
				</Mappings>
			</Property>
		</Properties>
	<PropertyGroups>
  <PropertyGroup name="Size" type="String" category="Layout">
    <Description>outer height and width of widget</Description>
  </PropertyGroup>
  <PropertyGroup name="Position" type="String" category="Layout">
    <Description>top and left of widget</Description>
  </PropertyGroup>
</PropertyGroups>
<StyleProperties>
  <StyleProperty name="width" type="Size" not_styleable="true" owner="widgets.HA_BR_Template_WL.HA_IO_Analog" category="Layout" groupRefId="Size" groupOrder="1" default="540">
    <StyleElement attribute="@include elemWidth($value)"/>
    <Description>outer width of widget</Description>
  </StyleProperty>
  <StyleProperty name="height" type="Size" not_styleable="true" owner="widgets.HA_BR_Template_WL.HA_IO_Analog" category="Layout" groupRefId="Size" groupOrder="2" default="35">
    <StyleElement attribute="@include elemHeight($value)"/>
    <Description>outer height of widget</Description>
  </StyleProperty>
  <StyleProperty name="top" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="1">
    <StyleElement attribute="@include elemTop($value)"/>
    <Description>absolute position measured from top boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="left" type="Integer" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" groupRefId="Position" groupOrder="2">
    <StyleElement attribute="@include elemLeft($value)"/>
    <Description>absolute position measured from left boundary of parent container</Description>
  </StyleProperty>
  <StyleProperty name="zIndex" type="UInteger" not_styleable="true" owner="brease.core.BaseWidget" category="Layout" required="true">
    <StyleElement attribute="z-index"/>
    <Description>The zIndex property specifies the z-order of a widget and its childs.&lt;br/&gt;&#xD;
        When widgets overlap, z-order determines which one covers the other. A widget with a larger zIndex generally covers a widget with a lower one.&lt;br/&gt;&#xD;
        The zIndex must be unique within a content.&lt;br/&gt;</Description>
  </StyleProperty>
  <StyleProperty name="margin" category="Layout" type="Margin" default="0px">
    <StyleElement attribute="margin"/>
    <Description>Margin of the Widget</Description>
  </StyleProperty>
</StyleProperties>
</Widget>
</WidgetLibrary>